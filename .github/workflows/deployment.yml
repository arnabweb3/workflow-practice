name: Lint, Test and Deploy Project
on:
  push:
    branches:
      - master
jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3

      - name: Load and cache dependencies
        uses: ./.github/actions/cached-dev-deps
    
      - name: Lint Project
        run: npm run lint
  Test:
    needs: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3

      - name: Load and cache dependencies
        uses: ./.github/actions/cached-dev-deps

      - name: Test Project
        continue-on-error : true
        id: run-test
        run: npm run test

      
  Build:
    needs: Test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{steps.publish.outputs.script-file}}
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3

      - name: Load and cache dependencies
        id: cache-deps
        uses: ./.github/actions/cached-dev-deps
        with :
          caching: 'false'

      - name: Output information
        run: echo "Cache used ? ${{steps.cache-deps.outputs.used-cache}}"
        
      - name: Build Project
        run: npm run build

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist

      - name: Publish JS Files
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./dist

      - name: Output contents
        run: ls

      - name: Deploy site
        id: deploy
        uses: ./.github/actions/deploy-to-s3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        with:
          bucket: gh-custom-action
          dist-folder: ./dist
  Print-Deploy-Output:
    needs: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Print deploy output
        run: echo "${{needs.Deploy.outputs.result}}"
  Report:
    needs: [Lint, Deploy]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output information
        run: |
          echo "Something went wrong"
          echo "${{toJson(github)}}"
  

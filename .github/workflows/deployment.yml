name: Lint, Test and Deploy Project
on:
  push:
    branches:
      - master
jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}

      - name: Install Dependencies
        run: npm ci

      - name: Lint Project
        run: npm run lint
  Test:
    needs: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}    

      - name: Install Dependencies
        run: npm ci

      - name: Test Project
        run: npm run test

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: "*"
  Build:
    needs: Test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{steps.publish.outputs.script-file}}
    steps:
      - name: Get Code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: deps-node-modules-${{hashFiles('**/package-lock.json')}}

      - name: Install Dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

      - name: Publish JS Files
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
      - name: Get Artifact
        uses: actions/download-artifact@v4
        with:
          name: artifacts

      - name: List contents
        run: ls

      - name: Output filename
        run: echo "${{needs.Build.outputs.script-file}}"

      - name: Deploy Project
        run: echo "Deploying..."
